% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/allGenerics.R, R/common.R
\name{subsetting}
\alias{subsetting}
\alias{subsetting,MultiAssayExperiment-method}
\alias{subsetting,SummarizedExperiment-method}
\alias{subsetting,MultiDataSet-method}
\alias{subsetting,ExpressionSet-method}
\title{Subsetting a ProMetIS \code{SummarizedExperiment}, \code{MultiAssayExperiment}, \code{ExpressionSet} or \code{MultiDataSet}}
\usage{
subsetting(
  x,
  set.c = NULL,
  genes.vc = "all",
  sex.vc = "all",
  tissues.vc = "all",
  common_samples.l = FALSE,
  na_thresh.n = 0.2,
  var_thresh.n = .Machine$double.eps,
  imputed_thresh.n = 0.2
)

\S4method{subsetting}{MultiAssayExperiment}(
  x,
  set.c = NULL,
  genes.vc = "all",
  sex.vc = "all",
  tissues.vc = "all",
  common_samples.l = FALSE,
  na_thresh.n = 0.2,
  var_thresh.n = .Machine$double.eps,
  imputed_thresh.n = 0.2
)

\S4method{subsetting}{SummarizedExperiment}(
  x,
  set.c = NULL,
  genes.vc = "all",
  sex.vc = "all",
  tissues.vc = NULL,
  common_samples.l = NULL,
  na_thresh.n = 0.2,
  var_thresh.n = .Machine$double.eps,
  imputed_thresh.n = 0.2
)

\S4method{subsetting}{MultiDataSet}(
  x,
  set.c = NULL,
  genes.vc = "all",
  sex.vc = "all",
  tissues.vc = "all",
  common_samples.l = FALSE,
  na_thresh.n = 0.2,
  var_thresh.n = .Machine$double.eps,
  imputed_thresh.n = 0.2
)

\S4method{subsetting}{ExpressionSet}(
  x,
  set.c = NULL,
  genes.vc = "all",
  sex.vc = "all",
  tissues.vc = NULL,
  common_samples.l = NULL,
  na_thresh.n = 0.2,
  var_thresh.n = .Machine$double.eps,
  imputed_thresh.n = 0.2
)
}
\arguments{
\item{x}{An S4 object of class \code{SummarizedExperiment}, \code{MultiAssayExperiment}, \code{ExpressionSet} or \code{MultiDataSet}}

\item{set.c}{Character: name of the data set}

\item{genes.vc}{Character vector: with elements in 'LAT', 'MX2', and 'WT'; when
set to 'all', the 'c('WT', 'LAT', 'MX2')' vector will be used}

\item{sex.vc}{Character vector: with elements in 'M' and 'F'; when
set to 'all', the 'c('M', 'F')' vector will be used}

\item{tissues.vc}{Character vector: with elements in 'liver' and 'plasma'; when
set to 'all', the 'c('liver', 'plasma')' vector will be used}

\item{common_samples.l}{Logical: should the datasets be restricted to common samples?}

\item{na_thresh.n}{Numeric: maximal proportion of NAs for a feature to be kept}

\item{var_thresh.n}{Numteric: minimal variance for a feature to be kept}

\item{imputed_thresh.n}{Numeric: for proteomics datasets, the features with a
too high proportion of imputed values in all conditions to be compared will be
discarded}
}
\value{
\code{ExpressionSet} or \code{MultiDataSet} with the selected sets, samples,
and features (after filtering for the proportion of NAs, the minimum of variance,
and the proportion of imputed values for proteomics datasets)
}
\description{
Subsetting ProMetIS datasets according to genes, sex and tissues, and filtering out
features with too many NAs, too low variance, or too many imputed values (proteomics
datasets only)
}
\examples{
# MultiAssayExperiment
latmx2.mae <- phenomis::reading(ProMetIS::statistics_singleomics_dir.c(),
                                report.c = "none")
latmx2.mae <- latmx2.mae[, , ProMetIS::sets.vc()]
plasma_lat.mae <- ProMetIS::subsetting(latmx2.mae,
                                       genes.vc = c("WT", "LAT"),
                                       tissues.vc = "plasma")
# SummarizedExperiment
set.c <- "proteomics_liver"
proteo.mae <- phenomis::reading(ProMetIS::statistics_singleomics_dir.c(),
                                subsets.vc = set.c,
                                report.c = "none")
proteo.se <- proteo.mae[[set.c]]
## adding (common) sample metadata to the summarized experiment
sample_meta.DF <- SummarizedExperiment::colData(proteo.mae)
SummarizedExperiment::colData(proteo.se)[, "gene"] <- sample_meta.DF[colnames(proteo.se), "gene"]
SummarizedExperiment::colData(proteo.se)[, "sex"] <- sample_meta.DF[colnames(proteo.se), "sex"]
proteo_lat.se <- ProMetIS::subsetting(proteo.se,
                                      set.c = set.c,
                                      genes.vc = c("WT", "LAT"))
# MultiDataSet
latmx2.mds <- phenomis::reading(ProMetIS::statistics_singleomics_dir.c(),
                                output.c = "set",
                                report.c = "none")
latmx2.mds <- latmx2.mds[, ProMetIS::sets.vc()]
plasma_lat.mds <- ProMetIS::subsetting(latmx2.mds,
                                       genes.vc = c("WT", "LAT"),
                                       tissues.vc = "plasma")
# ExpressionSet
set.c <- "proteomics_liver"
proteo.mset <- phenomis::reading(ProMetIS::statistics_singleomics_dir.c(),
                                 subsets.vc = set.c,
                                 output.c = "set",
                                 report.c = "none")
proteo.set <- proteo.mset[[set.c]]
proteo_lat.set <- ProMetIS::subsetting(proteo.set,
                                       set.c = set.c,
                                       genes.vc = c("WT", "LAT"))
}
